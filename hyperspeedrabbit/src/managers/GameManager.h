#pragma once
#include "stdafx.h"
#include "Scene.h"
#include "dispositif.h"

#include <vector>

namespace PM3D {
	class GameManager
	{

////////////////////////////////////////////////////////////////////
//////////////////// Attributes ////////////////////////////////////
////////////////////////////////////////////////////////////////////

	private:
		std::vector<std::unique_ptr<Scene>> m_sceneList;
		int m_currentSceneIndex = 0;
		


////////////////////////////////////////////////////////////////////
//////////////////// Const/Dest ////////////////////////////////////
////////////////////////////////////////////////////////////////////

	private:
		GameManager() = default;

	public:
		GameManager(GameManager&) = delete;
		~GameManager() = default;


////////////////////////////////////////////////////////////////////
//////////////////// Operators /////////////////////////////////////
////////////////////////////////////////////////////////////////////

	public:
		GameManager& operator=(GameManager&) = delete;


////////////////////////////////////////////////////////////////////
//////////////////// Accessors /////////////////////////////////////
////////////////////////////////////////////////////////////////////

	public:
		static GameManager& get() noexcept {
			static GameManager gameManager;
			return gameManager;
		}


////////////////////////////////////////////////////////////////////
//////////////////// Methods ///////////////////////////////////////
////////////////////////////////////////////////////////////////////

	public:
		bool preInitScenes(CDispositifD3D11* _pDispositif, XMMATRIX* _proj, XMMATRIX* _view, XMMATRIX* _viewProj);
		bool initScenes();
		bool renderScene();
		bool animeScene(float _tempEcoule);
		void cleanUp() noexcept;
	};
}