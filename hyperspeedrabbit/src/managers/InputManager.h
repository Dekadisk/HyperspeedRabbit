#pragma once

namespace PM3D {
	class InputManager
	{

////////////////////////////////////////////////////////////////////
//////////////////// Attributes ////////////////////////////////////
////////////////////////////////////////////////////////////////////

	protected:
		DIMOUSESTATE m_mouseState;

	private:
		IDirectInput8* m_pDirectInput;
		IDirectInputDevice8* m_pKeys;
		IDirectInputDevice8* m_pMouse;
		IDirectInputDevice8* m_pJoystick;

		static bool m_initialized;
		char m_keysBuffer[256];

		HWND m_handler = FindWindowA(nullptr, "PetitMoteur3D");

////////////////////////////////////////////////////////////////////
//////////////////// Const/Dest ////////////////////////////////////
////////////////////////////////////////////////////////////////////

	private:
		InputManager() = default;
	public:
		~InputManager();
		InputManager(InputManager&) = delete;


////////////////////////////////////////////////////////////////////
//////////////////// Operators /////////////////////////////////////
////////////////////////////////////////////////////////////////////

	public:
		InputManager& operator=(InputManager&) = delete;


////////////////////////////////////////////////////////////////////
//////////////////// Accessors /////////////////////////////////////
////////////////////////////////////////////////////////////////////

	public:
		static InputManager& get()
		{
			static InputManager inputManager;
			return inputManager;
		}

		bool isPressed(UINT key)  const noexcept;
		void updateKeyStates() noexcept;
		void acquireKeys() noexcept;

		const DIMOUSESTATE& getMouseState() const noexcept;
		void updateMouseState() noexcept;
		void acquireMouse() noexcept;

		DirectX::XMFLOAT2 getMousePosition() const noexcept;

////////////////////////////////////////////////////////////////////
//////////////////// Methods ///////////////////////////////////////
////////////////////////////////////////////////////////////////////

		bool init(HINSTANCE hInstance, HWND hWnd);


	};
}